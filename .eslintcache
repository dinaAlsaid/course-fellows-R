[{"/home/dina/401proj/front/course-fellows/src/index.js":"1","/home/dina/401proj/front/course-fellows/src/reportWebVitals.js":"2","/home/dina/401proj/front/course-fellows/src/App.js":"3","/home/dina/401proj/front/course-fellows/src/context/socketClientContext.js":"4","/home/dina/401proj/front/course-fellows/src/components/party/room/joinRoom.js":"5","/home/dina/401proj/front/course-fellows/src/context/auth.js":"6","/home/dina/401proj/front/course-fellows/src/components/party/socket-client.js":"7","/home/dina/401proj/front/course-fellows/src/components/party/chat/chat.js":"8","/home/dina/401proj/front/course-fellows/src/components/party/player/player.js":"9","/home/dina/401proj/front/course-fellows/src/components/Register/index.jsx":"10","/home/dina/401proj/front/course-fellows/src/components/nav/index.jsx":"11","/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/index.jsx":"12","/home/dina/401proj/front/course-fellows/src/components/Home/index.jsx":"13","/home/dina/401proj/front/course-fellows/src/components/publicCourses/index.jsx":"14","/home/dina/401proj/front/course-fellows/src/components/detailCourse/index.jsx":"15","/home/dina/401proj/front/course-fellows/src/components/createCourse/index.jsx":"16","/home/dina/401proj/front/course-fellows/src/components/party/chat/ChatBubble.js":"17","/home/dina/401proj/front/course-fellows/src/components/party/player/VideoList.jsx":"18","/home/dina/401proj/front/course-fellows/src/components/party/player/Video.jsx":"19","/home/dina/401proj/front/course-fellows/src/components/Register/Signup.jsx":"20","/home/dina/401proj/front/course-fellows/src/components/Register/Login.jsx":"21","/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/video.jsx":"22","/home/dina/401proj/front/course-fellows/src/components/publicCourses/CourseCard.jsx":"23","/home/dina/401proj/front/course-fellows/src/components/detailCourse/videolist.jsx":"24","/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/videolist.jsx":"25","/home/dina/401proj/front/course-fellows/src/components/createCourse/sectionForm.jsx":"26","/home/dina/401proj/front/course-fellows/src/components/detailCourse/Section.jsx":"27","/home/dina/401proj/front/course-fellows/src/components/landingPage/index.jsx":"28","/home/dina/401proj/front/course-fellows/src/components/myCourses/index.jsx":"29","/home/dina/401proj/front/course-fellows/src/components/Register/Oauth.jsx":"30","/home/dina/401proj/front/course-fellows/src/components/myCourses/UserCard.jsx":"31","/home/dina/401proj/front/course-fellows/src/components/createCourseForm/index.jsx":"32"},{"size":641,"mtime":1607887914036,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1607498703540,"results":"35","hashOfConfig":"34"},{"size":1482,"mtime":1608017276990,"results":"36","hashOfConfig":"34"},{"size":522,"mtime":1608016837100,"results":"37","hashOfConfig":"34"},{"size":1616,"mtime":1608017196330,"results":"38","hashOfConfig":"34"},{"size":2397,"mtime":1607857461646,"results":"39","hashOfConfig":"34"},{"size":4434,"mtime":1608037648050,"results":"40","hashOfConfig":"34"},{"size":950,"mtime":1608037420890,"results":"41","hashOfConfig":"34"},{"size":215,"mtime":1608036788510,"results":"42","hashOfConfig":"34"},{"size":1982,"mtime":1607719905790,"results":"43","hashOfConfig":"34"},{"size":1400,"mtime":1607857461646,"results":"44","hashOfConfig":"34"},{"size":1838,"mtime":1607883663266,"results":"45","hashOfConfig":"34"},{"size":530,"mtime":1607719905790,"results":"46","hashOfConfig":"34"},{"size":561,"mtime":1607857461646,"results":"47","hashOfConfig":"34"},{"size":1876,"mtime":1607857461646,"results":"48","hashOfConfig":"34"},{"size":9043,"mtime":1608016837100,"results":"49","hashOfConfig":"34"},{"size":459,"mtime":1608036440490,"results":"50","hashOfConfig":"34"},{"size":504,"mtime":1608016837100,"results":"51","hashOfConfig":"34"},{"size":525,"mtime":1608016837100,"results":"52","hashOfConfig":"34"},{"size":2257,"mtime":1607680347310,"results":"53","hashOfConfig":"34"},{"size":1772,"mtime":1607857461646,"results":"54","hashOfConfig":"34"},{"size":2510,"mtime":1607884236686,"results":"55","hashOfConfig":"34"},{"size":4135,"mtime":1607862333126,"results":"56","hashOfConfig":"34"},{"size":2554,"mtime":1607880760206,"results":"57","hashOfConfig":"34"},{"size":3812,"mtime":1607882097906,"results":"58","hashOfConfig":"34"},{"size":581,"mtime":1607857461646,"results":"59","hashOfConfig":"34"},{"size":2163,"mtime":1608023974320,"results":"60","hashOfConfig":"34"},{"size":1079,"mtime":1607864744586,"results":"61","hashOfConfig":"34"},{"size":2227,"mtime":1608016837100,"results":"62","hashOfConfig":"34"},{"size":919,"mtime":1607783047210,"results":"63","hashOfConfig":"34"},{"size":1323,"mtime":1607880911516,"results":"64","hashOfConfig":"34"},{"size":1552,"mtime":1607863817196,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1gkgs41",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"/home/dina/401proj/front/course-fellows/src/index.js",[],["140","141"],"/home/dina/401proj/front/course-fellows/src/reportWebVitals.js",[],"/home/dina/401proj/front/course-fellows/src/App.js",["142"],"import { Route, Switch } from 'react-router-dom';\nimport SocketClient from './components/party/socket-client';\nimport JoinRoom from './components/party/room/joinRoom.js';\nimport SocketClientProvider from './context/socketClientContext.js';\nimport Register from './components/Register';\nimport RegisterProvider from './context/auth';\nimport Nav from './components/nav';\nimport PublicCourses from './components/publicCourses';\nimport Home from './components/Home';\nimport DetailCourse from './components/detailCourse';\nimport Detailvideo from './components/detailVideo.jsx';\nimport CustomizedCourse from './components/createCourse';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RegisterProvider>\n        {/* <SocketClientProvider> */}\n        <Nav />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/register\" component={Register} />\n          <Route exact path=\"/party\" component={JoinRoom} />\n          <Route path=\"/course/:id\" component={DetailCourse} />\n          <Route path=\"/public/:publicid\" component={DetailCourse} />\n          <Route path=\"/video/:courseId/:id\" component={Detailvideo} />\n          <Route path=\"/party/:roomId\" component={SocketClient} />\n          <Route path=\"/public\" component={PublicCourses} />\n          <Route path=\"/createCourse\" component={CustomizedCourse} />\n        </Switch>\n        {/* </SocketClientProvider> */}\n      </RegisterProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/dina/401proj/front/course-fellows/src/context/socketClientContext.js",[],"/home/dina/401proj/front/course-fellows/src/components/party/room/joinRoom.js",[],"/home/dina/401proj/front/course-fellows/src/context/auth.js",[],"/home/dina/401proj/front/course-fellows/src/components/party/socket-client.js",["143"],"import React, { useContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chat from './chat/chat.js';\nimport { RegisterContext } from '../../context/auth';\nimport Player from './player/player.js';\nimport YTPlayer from 'yt-player';\nimport superagent from 'superagent';\nimport VideoList from './player/VideoList';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nlet backendURL = 'http://localhost:4000';\nlet socket;\nlet player;\nfunction SocketClient(props) {\n  const registerContext = useContext(RegisterContext);\n  const [messages, setMessages] = useState([]);\n  const {\n    match: { params },\n  } = props;\n  console.log('ana id', params);\n  const initObj = { room_id: params.roomId, messages: [{ msg: '', user: '' }] };\n  function playerInit() {\n    player = new YTPlayer('#player', {\n      related: false,\n      modestBranding: true,\n    });\n\n    player.on('playing', () => {\n      console.log('played');\n      socket.emit('play');\n    });\n    player.on('paused', () => {\n      console.log('paused', player.getCurrentTime());\n      socket.emit('pause', player.getCurrentTime());\n    });\n  }\n  const [videos, setVideos] = useState([]);\n  const [activeVideo, setActiveVideo] = useState('');\n  const initiateSocket = () => {\n    socket = io(`${backendURL}`);\n    console.log(`Connecting socket...`);\n    socket.emit('roomId init', params.roomId);\n    socket.emit('join');\n    postRoom(initObj);\n    getMsgs(params.roomId);\n\n    if (props.location.state) {\n      const videos = props.location.state.payload.reduce((acc, section) => {\n        return [...acc, ...section.videos];\n      }, []);\n      socket.emit('set videos', videos);\n    }\n    socket.on('get message', (message) => {\n      setMessages((prev) => {\n        return [...prev, message.message];\n      });\n    });\n\n    socket.emit('get videos');\n    socket.on('client videos', (v) => {\n      setVideos(v);\n      setActiveVideo(v[0].video_id);\n    });\n    // enter\n    socket.emit('enter');\n    // reset active video\n    socket.on('reset active video', (v) => {\n      setActiveVideo(v);\n    });\n    socket.on('update active video', (newActive) => {\n      setActiveVideo(newActive);\n    });\n    socket.on('play', () => {\n      player.play();\n    });\n    socket.on('pause', (time) => {\n      player.seek(time);\n      player.pause();\n    });\n  };\n\n  const disconnectSocket = () => {\n    console.log('Disconnecting socket...');\n    if (socket) socket.disconnect();\n  };\n\n  function updateActiveVideo(video) {\n    console.log(video);\n    socket.emit('update active video', video);\n    setActiveVideo(video);\n  }\n\n  function handleMsgSubmit(message) {\n    let emitted = { msg: message, user: registerContext.user.username };\n    console.log('from send message', emitted);\n    socket.emit('msg', emitted);\n\n    putMsgs({ room_id: params.roomId, messages: emitted });\n  }\n  function getMsgs(roomId) {\n    superagent\n      .get(`http://localhost:4000/messages/${roomId}`)\n      .then(({ body }) => {\n        if(body){\n          setMessages(body.messages);\n          // console.log(body, messages);\n          // context.socket.emit('chat message', { emitted, roomId });\n\n        }\n\n      });\n  }\n  function postRoom(msgs) {\n    superagent\n      .post(`${backendURL}/messages`)\n      .send(msgs)\n      .then(({ body }) => console.log('post body', body));\n  }\n  function putMsgs(msgs) {\n    console.log('putMsgs sent', msgs);\n    superagent\n      .put(`${backendURL}/messages`)\n      .send(msgs)\n      .then(({ body }) => {\n        console.log('put body', body);\n      });\n  }\n\n  useEffect(() => {\n    playerInit();\n    initiateSocket();\n\n    return () => {\n      disconnectSocket();\n    };\n  }, []);\n\n  return (\n    <div>\n      <Container fluid>\n        <Row noGutters>\n          <Col className=\"overflow-y height-100\" xs={12} md={3}>\n            <VideoList videos={videos} setActiveVideo={updateActiveVideo} />\n          </Col>\n          <Col className=\"height-100\" xs={12} md={6}>\n              <Player\n                videos={videos}\n                activeVideo={activeVideo}\n                setActiveVideo={updateActiveVideo}\n                player={player}\n              />\n              <div  className=\"overflow-y\" style={{height:'40vh'}}>\n\n              <Chat payload={messages} handleMsgSubmit={handleMsgSubmit} />{' '}\n              </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default SocketClient;\n","/home/dina/401proj/front/course-fellows/src/components/party/chat/chat.js",[],"/home/dina/401proj/front/course-fellows/src/components/party/player/player.js",[],"/home/dina/401proj/front/course-fellows/src/components/Register/index.jsx",["144"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\nimport { If, Else, Then } from 'react-if';\nimport { Container, Image, Col, Row } from 'react-bootstrap';\nimport { RegisterContext } from '../../context/auth';\nlet image = 'https://i.pinimg.com/originals/6b/e3/69/6be369b11b50e0b1c3a2fea19ba7e2ba.png';\n\nfunction Register() {\n  let history = useHistory();\n  let [wantSignup, setWantSignup] = useState(false);\n  const { loggedIn } = useContext(RegisterContext);\n  useEffect(() => {\n    console.log('hi');\n    if (loggedIn) history.push('/');\n  }, [history, loggedIn]);\n  return (\n    <>\n      <section className=\"register\">\n        <Container\n          className=\"justify-content-md-center\"\n          fluid=\"sm\"\n          style={{ paddingTop: 39 }}\n        >\n          <Row>\n            <Col md=\"8\">\n              <Image\n                src=\"https://i.pinimg.com/564x/1b/61/21/1b61216ceaccc25f3c386dce23ea567e.jpg\"\n                className=\"img-fluid\"\n                rounded\n              />\n            </Col>\n            <Col md=\"4\">\n              <If condition={wantSignup}>\n                <Then>\n                  <Login></Login>\n                </Then>\n                <Else>\n                  <Signup></Signup>\n                </Else>\n              </If>\n\n              <a\n                style={{\n                  width: '100%',\n                  margin: '0 auto',\n                  display: 'block',\n                  textAlign: 'center',\n                }}\n                href=\"#1\"\n                onClick={() => {\n                  setWantSignup(!wantSignup);\n                }}\n              >\n                {wantSignup\n                  ? 'Dont have account? sign up now'\n                  : 'already a user?'}\n              </a>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </>\n  );\n}\n\nexport default Register;\n","/home/dina/401proj/front/course-fellows/src/components/nav/index.jsx",["145"],"import React, { useContext } from 'react';\nimport { If, Else, Then } from 'react-if';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Container, Button } from 'react-bootstrap';\nimport { RegisterContext } from '../../context/auth';\nfunction MainNav() {\n  const context = useContext(RegisterContext);\n  return (\n    <Navbar expand=\"md\" className=\"navbar position-fixed\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          OneSchool\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"/\">\n              {context.loggedIn ? 'My Courses' : 'Home'}\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/public\">\n              Courses\n            </Nav.Link>\n            <If condition={context.loggedIn}>\n              <Then>\n                <Nav.Link as={Link} to=\"/\" onClick={context.logout}>\n                  Logout\n                </Nav.Link>\n              </Then>\n              <Else>\n                <Nav.Link as={Link} to=\"/register\">\n                  Login\n                </Nav.Link>\n              </Else>\n            </If>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default MainNav;","/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/Home/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/publicCourses/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/detailCourse/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/createCourse/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/party/chat/ChatBubble.js",[],"/home/dina/401proj/front/course-fellows/src/components/party/player/VideoList.jsx",["146"],"import React from 'react';\nimport { ListGroup, Button } from 'react-bootstrap';\nfunction VideoList({ videos, setActiveVideo }) {\n  // url_simple\n  return (\n    <ListGroup>\n      {videos.map(video => {\n        return (\n          <ListGroup.Item\n            className=\"pointer\"\n            onClick={() => {\n              setActiveVideo(video.video_id);\n            }}\n          >\n            {video.title}\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n}\n\nexport default VideoList;\n","/home/dina/401proj/front/course-fellows/src/components/party/player/Video.jsx",["147","148","149","150"],"import React, { useState, useEffect } from 'react';\n\nlet player;\nfunction Video({ activeVideo, player }) {\n  console.log(activeVideo);\n  //   const [player, setPlayer] = useState({});\n  //   function buildPlayer() {\n  //     setPlayer(new YTPlayer('#player').load(activeVideo));\n  //     console.log(player);\n  //   }\n  function playerLoad() {\n    player.load('GKSRyLdjsPA');\n  }\n\n  useEffect(() => {\n    if (player) player.load(activeVideo);\n  }, [activeVideo]);\n  return <div id=\"player\">{}</div>;\n}\n\nexport default Video;\n","/home/dina/401proj/front/course-fellows/src/components/Register/Signup.jsx",["151","152"],"import React, { useState, useContext } from 'react';\nimport { RegisterContext } from '../../context/auth';\nimport { If, Else, Then } from 'react-if';\nimport { Button, Form, Row, Container } from 'react-bootstrap';\nimport Oauth from './Oauth';\n\nfunction Signup(props) {\n\tconst context = useContext(RegisterContext);\n\tconst [ username, setusername ] = useState('');\n\tconst [ password, setpassword ] = useState('');\n\tconst [ confirmPassword, setConfirmPassword ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.name === 'username') {\n\t\t\tsetusername(e.target.value);\n\t\t} else if (e.target.name === 'password') {\n\t\t\tsetpassword(e.target.value);\n\t\t} else if (e.target.name === 'Confirm') {\n\t\t\tsetConfirmPassword(e.target.value);\n\t\t}\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (password !== confirmPassword) alert('your passwords are not equal');\n\t\telse context.signup(username, password);\n\t};\n\n\treturn (\n\t\t<If condition={context.loggedIn}>\n\t\t\t<Then />\n\t\t\t<Else>\n\t\t\t\t<Form onSubmit={handleSubmit} style={{width:'100%',maxWidth:350, margin:'0 auto'}} className=\"justify-content-md-center\">\n\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tplaceholder=\"Enter Username\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"Confirm\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\"  style={{width:'100%',maxWidth:350}}>\n\t\t\t\t\t\tsignup\n\t\t\t\t\t</Button>\n          <div className='oauth'   >\n  \n  <Oauth   />\n\n</div>\n\t\t\t\t</Form>\n\t\t\t</Else>\n\t\t</If>\n\t);\n}\n\nexport default Signup;\n","/home/dina/401proj/front/course-fellows/src/components/Register/Login.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/video.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/publicCourses/CourseCard.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/detailCourse/videolist.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/detailVideo.jsx/videolist.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/createCourse/sectionForm.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/detailCourse/Section.jsx",["153","154"],"import React from 'react';\nimport { ListGroup, Card, ProgressBar, ListGroupItem, Button, Row, Col } from 'react-bootstrap';\nimport uniqId from 'uniqid';\nimport { If } from 'react-if';\nimport { Link } from 'react-router-dom';\n\nfunction Section(props) {\n  let now = Math.floor((props.course.time_watched / props.course.total_duration) * 100);\n\n  console.log('prop', props.ispublic);\n  // /:user/courses/:course'\n  return (\n    <>\n      <Card style={{ width: '100%' }}>\n        <Card.Img variant=\"top\" src={`${props.course.playlist.thumbnail}`} />\n        <Card.Body>\n          <Card.Title>{props.course.playlist.playlist_title}</Card.Title>\n          <If condition={!props.ispublic}>\n            <Card.Text>\n              <ProgressBar now={now} className=\"mb-2\" />\n              <Card.Text style={{ textAlign: 'center' }}> {now}% COMPLETE</Card.Text>\n              <Card.Text>\n                <Row className=\"equal-btn\">\n                  <Link\n                    className=\"btn\"\n                    to={{\n                      pathname: '/createCourse',\n                      state: {\n                        payload: props.course._id,\n                        method: 'edit',\n                      },\n                    }}\n                  >\n                    Edit course\n                  </Link>{' '}\n                  <Link\n                    to={{\n                      pathname: `/party/${uniqId()}`,\n                      state: { payload: props.course.sections },\n                    }}\n                  >\n                    Create Room\n                  </Link>{' '}\n                </Row>\n              </Card.Text>\n            </Card.Text>\n          </If>\n        </Card.Body>\n\n        <ListGroup className=\"list-group-flush\">\n          {props.course.sections.map(item => {\n            // thumbnail\n            return (\n              <>\n                <ListGroupItem>\n                  {' '}\n                  <Card.Link href={`#${item.section_title}`}>{item.section_title}</Card.Link>{' '}\n                </ListGroupItem>\n              </>\n            );\n          })}\n        </ListGroup>\n      </Card>\n    </>\n  );\n}\nexport default Section;\n","/home/dina/401proj/front/course-fellows/src/components/landingPage/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/myCourses/index.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/Register/Oauth.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/myCourses/UserCard.jsx",[],"/home/dina/401proj/front/course-fellows/src/components/createCourseForm/index.jsx",[],["155","156"],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":136,"column":6,"nodeType":"167","endLine":136,"endColumn":8,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"169","line":8,"column":5,"nodeType":"163","messageId":"164","endLine":8,"endColumn":10},{"ruleId":"161","severity":1,"message":"170","line":6,"column":21,"nodeType":"163","messageId":"164","endLine":6,"endColumn":27},{"ruleId":"161","severity":1,"message":"170","line":2,"column":21,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},{"ruleId":"161","severity":1,"message":"171","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"172","line":3,"column":5,"nodeType":"163","messageId":"164","endLine":3,"endColumn":11},{"ruleId":"161","severity":1,"message":"173","line":11,"column":12,"nodeType":"163","messageId":"164","endLine":11,"endColumn":22},{"ruleId":"165","severity":1,"message":"174","line":17,"column":6,"nodeType":"167","endLine":17,"endColumn":19,"suggestions":"175"},{"ruleId":"161","severity":1,"message":"176","line":4,"column":24,"nodeType":"163","messageId":"164","endLine":4,"endColumn":27},{"ruleId":"161","severity":1,"message":"177","line":4,"column":29,"nodeType":"163","messageId":"164","endLine":4,"endColumn":38},{"ruleId":"161","severity":1,"message":"170","line":2,"column":55,"nodeType":"163","messageId":"164","endLine":2,"endColumn":61},{"ruleId":"161","severity":1,"message":"178","line":2,"column":68,"nodeType":"163","messageId":"164","endLine":2,"endColumn":71},{"ruleId":"157","replacedBy":"179"},{"ruleId":"159","replacedBy":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'SocketClientProvider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initiateSocket'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'image' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'player' is defined but never used.","'playerLoad' is defined but never used.","React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["184"],"'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.",["181"],["182"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [initiateSocket]",{"range":"189","text":"190"},"Update the dependencies array to be: [activeVideo, player]",{"range":"191","text":"192"},[3680,3682],"[initiateSocket]",[448,461],"[activeVideo, player]"]