[{"/home/dina/401proj/front/course-fellows/src/index.js":"1","/home/dina/401proj/front/course-fellows/src/App.js":"2","/home/dina/401proj/front/course-fellows/src/reportWebVitals.js":"3","/home/dina/401proj/front/course-fellows/src/components/party/socket-client.js":"4","/home/dina/401proj/front/course-fellows/src/components/party/chat/chat.js":"5","/home/dina/401proj/front/course-fellows/src/components/party/chat/ChatBubble.js":"6"},{"size":640,"mtime":1607553155970,"results":"7","hashOfConfig":"8"},{"size":354,"mtime":1607551023270,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607498703540,"results":"10","hashOfConfig":"8"},{"size":1199,"mtime":1607552529780,"results":"11","hashOfConfig":"8"},{"size":1305,"mtime":1607552809400,"results":"12","hashOfConfig":"8"},{"size":234,"mtime":1607552900070,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gkgs41",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dina/401proj/front/course-fellows/src/index.js",[],["29","30"],"/home/dina/401proj/front/course-fellows/src/App.js",[],"/home/dina/401proj/front/course-fellows/src/reportWebVitals.js",[],"/home/dina/401proj/front/course-fellows/src/components/party/socket-client.js",["31"],"import React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Chat from './chat/chat.js';\n\nconst ENDPOINT = \"http://localhost:4000/\"; //server endpoint\nconst socket = socketIOClient(ENDPOINT);\n\nfunction SocketClient(props) {\n\n  const [messages, setMessages] = useState([]);\n  \n  const handleMsgSubmit = (sentMsg) => {//gets the message from the input form (send)\n    let emitted = sentMsg;\n    setMessages([...messages,sentMsg]); //TODO: push it to the message q\n    socket.emit('chat message', emitted);\n  }\n\n  // useEffect(() => {\n  socket.on(\"Msg\", msg => { //will trigger an event everytime the state updates (receive)\n    //TODO: spread when message q added\n    setMessages([...messages , msg.msg]);\n  });\n  // },[]);//hook must be a pure function and socket is in the enclosure function, that's the missing dependency\n\n  return (\n    <div>\n      <Chat payload={messages} handleMsgSubmit={handleMsgSubmit} />\n    </div>\n  );\n}\n\nexport default SocketClient;\n\n//   socket.emit('chat message', $('#mess').val());\n//   $('#mess').val('');\n//   return false;\n// });\n\n// socket.on('hi', msg => {\n//   $('#chat').append($('<p>').text(`${msg.msg}`));\n// });\n","/home/dina/401proj/front/course-fellows/src/components/party/chat/chat.js",["32","33"],"// $('form').submit(e => {\n//   e.preventDefault();\n//   $('#chat').append($('<p>').text($('#mess').val()));\n\n//   socket.emit('chat message', $('#mess').val());\n//   $('#mess').val('');\n//   return false;\n// });\n// socket.on('hi', msg => {\n//   $('#chat').append($('<p>').text(`${msg.msg}`));\n// });\n\n\nimport React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport ChatBubble from './ChatBubble.js';\n\nfunction chat(props) {\n  let msg = ''\n  const handleMsgChange = (e) => {\n    // console.log(\"message from handle change\", msg);\n    msg = e.target.value;\n  }\n  const handleFormSumbit = (e) => {\n    e.preventDefault();\n    if ((msg !== '') && (msg !== ' ')) {\n      props.handleMsgSubmit(msg);\n    }\n    e.target.value = '';\n\n  }\n  return (\n    <>\n      {props.payload.map((item)=><ChatBubble text={item} />\n      )}\n      <Form onSubmit={handleFormSumbit}>\n        <Form.Control type=\"text\" placeholder=\"Send a message\" onChange={handleMsgChange} />\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </>\n  );\n}\n\nexport default chat;\n\n\n// function App() {\n\n\n//   return (\n//     <p>\n//       It's <time dateTime={response}>{response}</time>\n//     </p>\n//   );\n// }\n\n// export default App;","/home/dina/401proj/front/course-fellows/src/components/party/chat/ChatBubble.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":14,"column":17,"nodeType":"40","messageId":"41","endLine":14,"endColumn":26},{"ruleId":"38","severity":1,"message":"42","line":14,"column":28,"nodeType":"40","messageId":"41","endLine":14,"endColumn":36},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]